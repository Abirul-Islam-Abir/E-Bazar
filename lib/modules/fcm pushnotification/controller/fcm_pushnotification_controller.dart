import '../../../utils/export.dart';class FcmMessagingController extends GetxController {  var serverKey =      'key=AAAAdfpVXqM:APA91bGrsbKNFy3qtyzni4_UHxzgzR9IsCZ7L-pnSMa6mNQFMqeLBaFkfptjXYZUqtqB10ZNXfejZtsZQhw1ezbjQraWxR4258-xWIfOPgOqdFLZIed7685ix9jd1Z970BYuBQzSqdWn';  fcmPermissionRequest() async {    FirebaseMessaging messaging = FirebaseMessaging.instance;    NotificationSettings settings = await messaging.requestPermission(      alert: true,      announcement: false,      badge: true,      carPlay: false,      criticalAlert: false,      provisional: false,      sound: true,    );  }  Future getInitialMessage() async {    FirebaseMessaging.instance.getInitialMessage().then((message) {      if (message != null) {        print('${message.data}');      }    });  }  Future onForegroundApp() async {    FirebaseMessaging.onMessage.listen((RemoteMessage message) {      if (message.notification != null) {        /*print('onForegroundApp: ${message.notification!.title}');        print('onForegroundApp: ${message.notification!.body}');*/      }    });  }  Future onOpenedApp() async {    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {      if (message.data['route'] != null) {        Get.offNamed('${message.data['route']}');      }    });  }  Future getToken() async {    String? token = await FirebaseMessaging.instance.getToken();    if (token != null) {      /* appTokenStoreToDB(token); */ print('here have tokens:$token');    }  }  Future appTokenStoreToDB(tokens) async {    FirebaseFirestore.instance        .collection('Users')        .doc()        .set({'tokens': tokens});  }  @override  void onInit() {    fcmPermissionRequest();    getInitialMessage();    onForegroundApp();    onOpenedApp();    getToken();    super.onInit();  }}