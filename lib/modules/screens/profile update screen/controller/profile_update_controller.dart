import 'package:ecommerce_firebase/utils/export.dart';import '../../../../utils/all_instance.dart';import '../../../../utils/shared_pref.dart';import '../../../../utils/store_data.dart';import '../../../../utils/user_collection.dart';class ProfileUpdateController extends GetxController {  final TextEditingController updateEmailController = TextEditingController();  final TextEditingController newPasswordController = TextEditingController();  final TextEditingController resetPasswordController = TextEditingController();  final user = FirebaseAuth.instance.currentUser;  final TextEditingController nameController = TextEditingController();  final TextEditingController mobileController = TextEditingController();  final TextEditingController addressController = TextEditingController();  final TextEditingController emailController = TextEditingController();  final TextEditingController passwordController = TextEditingController();  final TextEditingController title = TextEditingController();  final TextEditingController desc = TextEditingController();  final TextEditingController token = TextEditingController();  final FocusNode nameFocus = FocusNode();  final FocusNode mobileFocus = FocusNode();  final FocusNode addressFocus = FocusNode();  final FocusNode passwordFocus = FocusNode();  final FocusNode emailFocus = FocusNode();  final formKey = GlobalKey<FormState>();  Future updateUserEmail() async {    await user?.updateEmail(updateEmailController.text);  }  Future sendEmailVerificationCode() async {    await user?.sendEmailVerification();  }  Future updatePassword() async {    await user?.updatePassword(newPasswordController.text);  }  Future sendPasswordResetEmail() async {    await FirebaseAuth.instance        .sendPasswordResetEmail(email: resetPasswordController.text);  }  Future deleteUser() async {    await user?.delete();  }  Future signOut() async {    await FirebaseAuth.instance.signOut();  }  Future<void> updateUserData() {    return Collection.collectionProfile.doc(Instance.userEmail).set({      'Email': emailController.text,      'Password': passwordController.text,      'Name': nameController.text,      'Mobile': mobileController.text,      'Address': addressController.text,      'Photo': UserData.userPhoto,    }).then((value) {      storeCompleteProfileUserData(        name: nameController.text,        address: addressController.text,        mobile: mobileController.text,      );      Get.back();    });  }}